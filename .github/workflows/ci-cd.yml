name: Frontend CI/CD

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint-and-build:
    runs-on: ubuntu-latest
    name: Code Quality & Build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run type check
        run: npx tsc -b --noEmit

      - name: Build application
        run: npm run build

      - name: Check build artifacts
        run: ls -la dist/

  deploy:
    needs: lint-and-build
    runs-on: self-hosted
    name: Deploy to Production
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t data-analyze-frontend:build-only .

      - name: Extract static files
        run: |
          # Create a temporary container and copy files
          CONTAINER_ID=$(docker create data-analyze-frontend:build-only)
          docker cp $CONTAINER_ID:/dist ./frontend-dist
          docker rm $CONTAINER_ID

          # Stopping nginx to safely update files
          cd /home/Skriler/deploy
          docker-compose stop nginx

          # Copying static files
          sudo rm -rf /home/Skriler/deploy/frontend/*
          sudo cp -r ./frontend-dist/* /home/Skriler/deploy/frontend/

          # Setting permissions for nginx
          sudo chown -R 101:101 /home/Skriler/deploy/frontend/

      - name: Deploy services
        run: |
          cd /home/Skriler/deploy
          docker-compose up -d

      - name: Clean up unused images
        run: docker image prune -f
